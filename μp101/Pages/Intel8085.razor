@page "/Intel8085"

    <ToolbarHolder>
        <IconButton Color="purple-gradient" Icon="far fa-file"></IconButton>
        <IconButton Color="purple-gradient" Icon="far fa-save"></IconButton>
        <IconButton Color="blue-gradient" Icon="fas fa-memory"></IconButton>
        <IconButton Color="peach-gradient" Icon="fas fa-fan"></IconButton>
    </ToolbarHolder>

<br />
  
    <DualGridHolder>
        <DualCard CardColor="mdb-color darken-3" TotalColumns="4">
            <CodeCell Width="100%" Height="78vh" Mnemonics="MOV A,B" TopBottomMargin="20px" />
        </DualCard>
        <DualCard CardColor="grey darken-4" TotalColumns="8">
            <TabHolder TabIDs="Tabs">
                <TabPage ID="@Tabs[0].ToString()" Active="true">
                    <br />
                    <DataTab Results="res" @ref="dataTab"/>
                </TabPage>
                <TabPage ID="@Tabs[1].ToString()">
                    <br />
                    <RegisterTab  @ref="registerTab"/>
                </TabPage>
                <TabPage ID="@Tabs[2].ToString()">
                    <FlagsTab @ref="flagsTab"/>
                </TabPage>
                <TabPage ID="@Tabs[3].ToString()">
                    <br />
                    <MemoryTab @ref="memoryTab"/>
                </TabPage>
                <TabPage ID="@Tabs[4].ToString()">
                    <UtilityTab/>
                </TabPage>
            </TabHolder>
        </DualCard>

    </DualGridHolder>

<style>
    body {
        background-repeat: no-repeat;
        background: rgb(17,50,62);
        background: linear-gradient(90deg, rgba(17,50,62,1) 0%, rgba(30,41,82,1) 100%);
        background-size: 100% 100vh;
        background-position: 0% 0%;
        color:white
    }
</style>

@code
{
    private string[] Tabs = new string[] {"Data","Registers","Flags","Memory","Utility" };
    List<LineAssembleResult> res { get; set; } = new List<LineAssembleResult>();

    protected RegisterTab registerTab { get; set; }
    protected DataTab dataTab { get; set; }
    protected FlagsTab flagsTab { get; set; }
    protected MemoryTab memoryTab { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {

        if (firstRender)
        {
            I8085.A.FromHex("0F");
            var ress = Assembler.ExecuteLine("MVI B,15");
            Console.WriteLine(ress.ErrorMessage);
            Console.WriteLine(I8085.B.Value);
            res.Add(ress);

            Refresh();

        }

        base.OnAfterRender(firstRender);

    }

    protected void Refresh()
    {
        registerTab.Refresh();
        memoryTab.Refresh();
        dataTab.Refresh();
        flagsTab.Refresh();

        StateHasChanged();
    }


}